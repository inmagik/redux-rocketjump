{"version":3,"sources":["webpack:///static/7.a8943b92.chunk.js","webpack:///./catalog/plugins/combine.md?b16d","webpack:///./catalog/plugins/combine.md"],"names":["webpackJsonp","786","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","801"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAgBD,EAAQ,IACxBE,EAA2BF,EAAQ,IACnCG,EAAuBH,EAAQ,KAASG,YACxCA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAST,EAAQ,OAEjCU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,IACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/7.a8943b92.chunk.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ 786:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(15);\n    var createReactClass = __webpack_require__(45);\n    var PageRenderer = __webpack_require__(292).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(801)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./combine.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./combine.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 801:\n/***/ (function(module, exports) {\n\nmodule.exports = \"The combine plugin is used to merge several rocketjumps in a dictionary-like fashion: this plugin accepts a dictionary containing [RocketJump Partials](/api/rocketpartial) and returns a complete RocketJump instance (already evaluated) that manages a state with the same structure of the original dictionary, but containing actual data in place of RocketJump Partials.\\r\\n\\r\\nRocketJump partials to be combined **must** meet the following criteria\\r\\n- each partial must have a configuration object at the last level of composition, which is called `combineConfig`\\r\\n- the `combineConfig` object can contain any attribute that is valid in the context of a `RocketJump Partial`\\r\\n- the `combineConfig` object **must** contain two special attributes\\r\\n  - **combineType**: will be used like the `type` attribute when completing the build of the partial\\r\\n  - **combineApi**: will be used like the `api` attribute when completing the build of the partial\\r\\n\\r\\nCombine plugin invocation takes two parameters\\r\\n```code\\r\\nlang: js\\r\\n---\\r\\ncombineRjs(dict, config);\\r\\n```\\r\\n\\r\\n`dict` is the aformentioned dictionary of composable partial rocketJumps, while `config` is a simple object containing only one key: `state`. This key can contain either a string or a selector, and plays the same role as the `state` parameter of a [final RocketJump configuration](/api/rocketjump)]\\r\\n\\r\\nExample\\r\\n```code\\r\\nlang: js\\r\\n---\\r\\n\\r\\n// This is a list plugin instance\\r\\nconst rjBaseList = rjList({\\r\\n    pagination: nextPreviousPaginationAdapter,\\r\\n    pageSize: 20,\\r\\n})\\r\\n\\r\\nconst { reducer } = combineRjs({\\r\\n    list: rj(rjBaseList, {\\r\\n        combineType: GET_BROS,\\r\\n        composeReducer: [\\r\\n            makeUpdateReducer(\\r\\n                SET_BRO_STARRED,\\r\\n                'data.list',\\r\\n                undefined,\\r\\n                ({ payload: { data: { starred } } }, obj) => ({ ...obj, starred }),\\r\\n            ),\\r\\n            makeRemoveListReducer(DELETE_BRO),\\r\\n            makeUpdateReducer(UPDATE_BRO, 'data.list'),\\r\\n        ],\\r\\n        combineApi: () => BROS,\\r\\n    }),\\r\\n\\r\\n    starring: rj(rjUpdate(), {\\r\\n        proxyActions: {\\r\\n            load: ({ load }) => (id, starred) =>\\r\\n                load({ id, starred }, { id }),\\r\\n        },\\r\\n        combineType: SET_BRO_STARRED,\\r\\n        // Return new \\\"starred\\\" state\\r\\n        combineApi: ({ id, starred }) => ({ id, starred }),\\r\\n    }),\\r\\n\\r\\n    deleting: rj(rjDelete(), {\\r\\n        combineType: DELETE_BRO,\\r\\n        // Such as 204 No Content\\r\\n        combineApi: () => null,\\r\\n    }),\\r\\n\\r\\n    updating: rj(rjUpdate(), {\\r\\n        combineType: UPDATE_BRO,\\r\\n        // Such as 204 No Content\\r\\n        combineApi: () => null,\\r\\n    })\\r\\n}, { state: 'bros' })\\r\\n```\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/7.a8943b92.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./combine.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./combine.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./combine.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/plugins/combine.md\n// module id = 786\n// module chunks = 7","module.exports = \"The combine plugin is used to merge several rocketjumps in a dictionary-like fashion: this plugin accepts a dictionary containing [RocketJump Partials](/api/rocketpartial) and returns a complete RocketJump instance (already evaluated) that manages a state with the same structure of the original dictionary, but containing actual data in place of RocketJump Partials.\\r\\n\\r\\nRocketJump partials to be combined **must** meet the following criteria\\r\\n- each partial must have a configuration object at the last level of composition, which is called `combineConfig`\\r\\n- the `combineConfig` object can contain any attribute that is valid in the context of a `RocketJump Partial`\\r\\n- the `combineConfig` object **must** contain two special attributes\\r\\n  - **combineType**: will be used like the `type` attribute when completing the build of the partial\\r\\n  - **combineApi**: will be used like the `api` attribute when completing the build of the partial\\r\\n\\r\\nCombine plugin invocation takes two parameters\\r\\n```code\\r\\nlang: js\\r\\n---\\r\\ncombineRjs(dict, config);\\r\\n```\\r\\n\\r\\n`dict` is the aformentioned dictionary of composable partial rocketJumps, while `config` is a simple object containing only one key: `state`. This key can contain either a string or a selector, and plays the same role as the `state` parameter of a [final RocketJump configuration](/api/rocketjump)]\\r\\n\\r\\nExample\\r\\n```code\\r\\nlang: js\\r\\n---\\r\\n\\r\\n// This is a list plugin instance\\r\\nconst rjBaseList = rjList({\\r\\n    pagination: nextPreviousPaginationAdapter,\\r\\n    pageSize: 20,\\r\\n})\\r\\n\\r\\nconst { reducer } = combineRjs({\\r\\n    list: rj(rjBaseList, {\\r\\n        combineType: GET_BROS,\\r\\n        composeReducer: [\\r\\n            makeUpdateReducer(\\r\\n                SET_BRO_STARRED,\\r\\n                'data.list',\\r\\n                undefined,\\r\\n                ({ payload: { data: { starred } } }, obj) => ({ ...obj, starred }),\\r\\n            ),\\r\\n            makeRemoveListReducer(DELETE_BRO),\\r\\n            makeUpdateReducer(UPDATE_BRO, 'data.list'),\\r\\n        ],\\r\\n        combineApi: () => BROS,\\r\\n    }),\\r\\n\\r\\n    starring: rj(rjUpdate(), {\\r\\n        proxyActions: {\\r\\n            load: ({ load }) => (id, starred) =>\\r\\n                load({ id, starred }, { id }),\\r\\n        },\\r\\n        combineType: SET_BRO_STARRED,\\r\\n        // Return new \\\"starred\\\" state\\r\\n        combineApi: ({ id, starred }) => ({ id, starred }),\\r\\n    }),\\r\\n\\r\\n    deleting: rj(rjDelete(), {\\r\\n        combineType: DELETE_BRO,\\r\\n        // Such as 204 No Content\\r\\n        combineApi: () => null,\\r\\n    }),\\r\\n\\r\\n    updating: rj(rjUpdate(), {\\r\\n        combineType: UPDATE_BRO,\\r\\n        // Such as 204 No Content\\r\\n        combineApi: () => null,\\r\\n    })\\r\\n}, { state: 'bros' })\\r\\n```\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/plugins/combine.md\n// module id = 801\n// module chunks = 7"],"sourceRoot":""}